<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title/><link>https://www.devopzilla.com/</link><description>Recent content on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 13 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.devopzilla.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Evolution Stage 1.0 AKA Quick intro to Kubernetes</title><link>https://www.devopzilla.com/events/devops-bootcamp-2021-1/milestone-06/</link><pubDate>Sun, 13 Jun 2021 00:00:00 +0000</pubDate><guid>https://www.devopzilla.com/events/devops-bootcamp-2021-1/milestone-06/</guid><description>GOAL Congratulation you just evolved into Charmeleon! It&amp;rsquo;s time to try out kubernetes by building a small dev cluster on your machines. This is the first step into evolving to Charizard!
Keep in touch with us to know more about our next &amp;ldquo;Charmeleon-to-Charizard&amp;rdquo; Bootcamp.
ACCEPTANCE CRITERIA Create kubernetes manifests for our application. Deployment Resource to run 2 replicas of our application. StatefulSet Resource to run 1 replica of our database.</description></item><item><title>Evolution Stage 0.5 AKA Scalability</title><link>https://www.devopzilla.com/events/devops-bootcamp-2021-1/milestone-05/</link><pubDate>Sun, 13 Jun 2021 00:00:00 +0000</pubDate><guid>https://www.devopzilla.com/events/devops-bootcamp-2021-1/milestone-05/</guid><description>GOAL Handle higher traffic loads by scalling the app hosizontally. To achieve horizontal scalability the app will be deployed across multiple EC2 instances.
ACCEPTANCE CRITERIA Create two EC2 machines and deploy two instances of the app on them. Create once EC2 machine for the load balancer (NGINX as a reverse proxy in our case). NGINX instance should be dockerized. Create once EC2 machine for the database. Database instance should be dockerized.</description></item><item><title>Evolution Stage 0.4 AKA CI/CD</title><link>https://www.devopzilla.com/events/devops-bootcamp-2021-1/milestone-04/</link><pubDate>Sun, 13 Jun 2021 00:00:00 +0000</pubDate><guid>https://www.devopzilla.com/events/devops-bootcamp-2021-1/milestone-04/</guid><description>GOAL Automate the whole process of shipping application changes to production.
ACCEPTANCE CRITERIA The automation pipeline should be triggered on code changes to master The pipeline should run the code&amp;rsquo;s automated tests The pipeline should re-build the docker image and push it to your docker repository The pipeline should re-deploy the application on the EC2 instance Secrets like SSH private keys should not be visible in source code nor printed in pipeline logs.</description></item><item><title>Evolution Stage 0.3 AKA Deploy - dockerized</title><link>https://www.devopzilla.com/events/devops-bootcamp-2021-1/milestone-03/</link><pubDate>Sun, 13 Jun 2021 00:00:00 +0000</pubDate><guid>https://www.devopzilla.com/events/devops-bootcamp-2021-1/milestone-03/</guid><description>GOAL Dockerize your application and it’s dependencies, then deploy the containers on another free tier EC2 instance with Ubuntu 20.
ACCEPTANCE CRITERIA Create Dockerfiles for your app. Add resource constraints to each docker container. Push your docker image to a Docker image registry. Deploy your app and it’s dependencies using docker-compose. Any new resources you add (etc. Dockerfile, docker-compose.yaml) should be commited to the source code. Make sure that your app and it’s data persist restarts.</description></item><item><title>Evolution Stage 0.2 AKA Deploy - classic</title><link>https://www.devopzilla.com/events/devops-bootcamp-2021-1/milestone-02/</link><pubDate>Sun, 13 Jun 2021 00:00:00 +0000</pubDate><guid>https://www.devopzilla.com/events/devops-bootcamp-2021-1/milestone-02/</guid><description>GOAL Deploy your app and it’s dependencies on a free tier EC2 instance with Ubuntu 20.
ACCEPTANCE CRITERIA The deployment should persist instance restarts. The app data should persist instance restarts. The final app deployment should not run in development mode. The app server should be listening on port 80, and the server IP should be publicly reachable. Conduct a load test with Artillery from your PC. Start with 10 RPS (Requests/Second) Double the number of requests per second until you reach failures from the server.</description></item><item><title>Evolution Stage 0.1 AKA Build an app</title><link>https://www.devopzilla.com/events/devops-bootcamp-2021-1/milestone-01/</link><pubDate>Sun, 13 Jun 2021 00:00:00 +0000</pubDate><guid>https://www.devopzilla.com/events/devops-bootcamp-2021-1/milestone-01/</guid><description>GOAL Build a simple RESTful CRUD API for a merchant application to manage 2 resources; items and orders.
WHY? Devops aims to shorten the software development life cycle by bridging development and operations, so looking into apps from the developer&amp;rsquo;s perspective will help you become a better devops engineer.
MODELS Item item id name cost available quantity Order order id item id shopping cart id requested quantity total cost ACCEPTANCE CRITERIA The code should be stored on a public Github repository An http client should be able to read, add, update, and delete items.</description></item><item><title>Prerequisites</title><link>https://www.devopzilla.com/events/devops-bootcamp-2021-1/milestone-00/</link><pubDate>Sun, 13 Jun 2021 00:00:00 +0000</pubDate><guid>https://www.devopzilla.com/events/devops-bootcamp-2021-1/milestone-00/</guid><description>&amp;gt; basic linux commands &amp;gt; basic python &amp;gt; knowledge about web development REFERENCES Topic Resource Linux article about ubuntu terminal commands Python python tutorial Python interactive python tutorial GIT GIT &amp;amp; Github tutorial JSON wikipedia article JSON article Web Basics article - overview Web Basics article - HTML Web Basics article -CSS Web Basics article - HTTP Web Basics youtube playlist Web Basics another article to learn HTML &amp;amp; CSS Relational Databases intro to relational databases Relational Databases intro to SQL with python REST article - what is an API REST article - what is a REST API REST article - REST &amp;amp; CRUD</description></item></channel></rss>